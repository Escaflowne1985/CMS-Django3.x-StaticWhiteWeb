# Generated by Django 3.0.3 on 2021-12-26 18:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0013_auto_20200416_1328'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserEmailVerifyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='系统随机生成的邮件验证码', max_length=20, verbose_name='验证码')),
                ('email', models.EmailField(help_text='用户使用邮件功能接受内容的注册时的邮箱', max_length=100, verbose_name='接收邮件邮箱')),
                ('send_type', models.CharField(choices=[('register', '注册'), ('forgot', '找回密码'), ('update_email', '修改密码')], help_text='用户使用邮件功能的类型', max_length=20, verbose_name='验证码类型')),
                ('send_time', models.DateTimeField(default=django.utils.timezone.now, help_text='默认创建时系统时间', verbose_name='邮件发送时间')),
            ],
            options={
                'verbose_name': '邮箱功能列表',
                'verbose_name_plural': '邮箱功能列表',
            },
        ),
        migrations.CreateModel(
            name='UserServerLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_user', models.CharField(default='', help_text='记录的用户信息', max_length=100, verbose_name='操作用户')),
                ('log_time', models.DateTimeField(default=django.utils.timezone.now, help_text='默认创建时系统时间', verbose_name='操作时间')),
                ('log_type', models.CharField(default='', help_text='记录的操作信息类型', max_length=100, verbose_name='操作类型')),
                ('log_content', models.TextField(blank=True, default='', help_text='记录的操作日志内容', null=True, verbose_name='日志内容')),
                ('log_status', models.CharField(choices=[('0', '失败'), ('1', '成功')], default=0, help_text='记录的操作状态', max_length=1, verbose_name='操作状态')),
                ('log_remark', models.TextField(blank=True, default='', help_text='记录的日志备注', null=True, verbose_name='日志备注')),
            ],
            options={
                'verbose_name': '用户行为日志',
                'verbose_name_plural': '用户行为日志',
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100, verbose_name='用户邮箱')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, help_text='默认创建时系统时间', verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '用户订阅列表',
                'verbose_name_plural': '用户订阅列表',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('actual_name', models.CharField(blank=True, max_length=10, null=True, verbose_name='用户姓名')),
                ('nick_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='用户昵称')),
                ('gender', models.CharField(choices=[('Male', '男性'), ('Female', '女性'), ('Undefined', '未定义')], default='未定义', max_length=9, verbose_name='用户性别')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='用户生日')),
                ('address', models.CharField(blank=True, default='', max_length=100, verbose_name='联系地址')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, verbose_name='联系电话')),
                ('user_image', models.ImageField(blank=True, default='UserImage/default.png', null=True, upload_to='UserImage', verbose_name='用户头像')),
                ('user_role', models.CharField(choices=[('Root', '超级管理员'), ('EditUser', '编辑'), ('ReviewUser', '审核'), ('WebsiteUsers', '网站用户'), ('Tourist', '游客')], default='游客', max_length=20, verbose_name='用户角色')),
                ('integral', models.IntegerField(default=0, verbose_name='用户积分')),
                ('vip_level', models.IntegerField(default=0, verbose_name='用户等级')),
                ('vip_exp', models.IntegerField(default=0, verbose_name='用户经验')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息列表',
                'verbose_name_plural': '用户信息列表',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserShare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_slug', models.CharField(default='', help_text='文章的slug信息', max_length=100, verbose_name='分享文章slug')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, help_text='默认创建时系统时间', verbose_name='分享时间')),
                ('share_type', models.CharField(default='', help_text='用户使用的分享文章的方式', max_length=30, verbose_name='分享方式')),
                ('user', models.ForeignKey(help_text='必须为Admin系统中的用户', on_delete=django.db.models.deletion.CASCADE, related_name='user_share', to=settings.AUTH_USER_MODEL, verbose_name='用户id')),
            ],
            options={
                'verbose_name': '用户分享信息',
                'verbose_name_plural': '用户分享信息',
            },
        ),
        migrations.CreateModel(
            name='UserOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_slug', models.CharField(default='', help_text='文章的slug信息', max_length=100, verbose_name='购买文章slug')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, help_text='默认创建时系统时间', verbose_name='购买时间')),
                ('consumption_integral', models.IntegerField(default=0, help_text='购买文章附件使用的积分', verbose_name='使用积分')),
                ('user', models.ForeignKey(help_text='必须为Admin系统中的用户', on_delete=django.db.models.deletion.CASCADE, related_name='user_order', to=settings.AUTH_USER_MODEL, verbose_name='用户id')),
            ],
            options={
                'verbose_name': '用户订单信息',
                'verbose_name_plural': '用户订单信息',
            },
        ),
        migrations.CreateModel(
            name='UserRead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_slug', models.CharField(default='', help_text='文章的slug信息', max_length=100, verbose_name='浏览文章slug')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, help_text='默认创建时系统时间', verbose_name='浏览时间')),
                ('user', models.ForeignKey(help_text='必须为Admin系统中的用户', on_delete=django.db.models.deletion.CASCADE, related_name='user_read', to=settings.AUTH_USER_MODEL, verbose_name='用户id')),
            ],
            options={
                'verbose_name': '用户浏览信息',
                'verbose_name_plural': '用户浏览信息',
                'unique_together': {('user', 'article_slug', 'add_time')},
            },
        ),
        migrations.CreateModel(
            name='UserFav',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_slug', models.CharField(default='', help_text='文章的slug信息', max_length=100, verbose_name='收藏文章slug')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, help_text='默认创建时系统时间', verbose_name='收藏时间')),
                ('user', models.ForeignKey(help_text='必须为Admin系统中的用户', on_delete=django.db.models.deletion.CASCADE, related_name='user_fav', to=settings.AUTH_USER_MODEL, verbose_name='用户id')),
            ],
            options={
                'verbose_name': '用户收藏信息',
                'verbose_name_plural': '用户收藏信息',
                'unique_together': {('user', 'article_slug')},
            },
        ),
    ]
